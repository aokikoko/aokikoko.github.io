"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7754],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return x}});var s=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,s)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,s,r=function(e,n){if(null==e)return{};var t,s,r={},o=Object.keys(e);for(s=0;s<o.length;s++)t=o[s],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(s=0;s<o.length;s++)t=o[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=s.createContext({}),u=function(e){var n=s.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=u(e.components);return s.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return s.createElement(s.Fragment,{},n)}},l=s.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),l=u(t),x=r,h=l["".concat(c,".").concat(x)]||l[x]||d[x]||o;return t?s.createElement(h,a(a({ref:n},p),{},{components:t})):s.createElement(h,a({ref:n},p))}));function x(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=l;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var u=2;u<o;u++)a[u]=t[u];return s.createElement.apply(null,a)}return s.createElement.apply(null,t)}l.displayName="MDXCreateElement"},80546:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return c},default:function(){return l},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p}});var s=t(87462),r=t(63366),o=(t(67294),t(3905)),a=["components"],i={title:"[TS] ts-axios(22) - \u5355\u5143\u6d4b\u8bd5(Axios\u5b9e\u4f8b\u6a21\u5757\u4e0e\u62e6\u622a\u5668\u6a21\u5757)",sidebar_position:30},c=void 0,u={unversionedId:"TypeScript/ts-axios-22",id:"TypeScript/ts-axios-22",title:"[TS] ts-axios(22) - \u5355\u5143\u6d4b\u8bd5(Axios\u5b9e\u4f8b\u6a21\u5757\u4e0e\u62e6\u622a\u5668\u6a21\u5757)",description:"----------------------------------------------------------------",source:"@site/docs/TypeScript/ts-axios-22.md",sourceDirName:"TypeScript",slug:"/TypeScript/ts-axios-22",permalink:"/docs/TypeScript/ts-axios-22",editUrl:"https://github.com/aokikoko/aokikoko.github.io/blob/main/website/docs/TypeScript/ts-axios-22.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{title:"[TS] ts-axios(22) - \u5355\u5143\u6d4b\u8bd5(Axios\u5b9e\u4f8b\u6a21\u5757\u4e0e\u62e6\u622a\u5668\u6a21\u5757)",sidebar_position:30},sidebar:"tutorialSidebar",previous:{title:"[TS] ts-axios(21) - \u5355\u5143\u6d4b\u8bd5(\u8bf7\u6c42\u6a21\u5757\u4e0eheaders\u6a21\u5757)",permalink:"/docs/TypeScript/ts-axios-21"},next:{title:"[TS] ts-axios(23) - \u5355\u5143\u6d4b\u8bd5(mergeConfig\u6a21\u5757\u4e0e\u8bf7\u6c42\u53d6\u6d88\u6a21\u5757)",permalink:"/docs/TypeScript/ts-axios-23"}},p=[{value:"Axios\u5b9e\u4f8b\u6a21\u5757\u5355\u5143\u6d4b\u8bd5",id:"axios\u5b9e\u4f8b\u6a21\u5757\u5355\u5143\u6d4b\u8bd5",children:[{value:"\u6d4b\u8bd5\u4ee3\u7801\u7f16\u5199",id:"\u6d4b\u8bd5\u4ee3\u7801\u7f16\u5199",children:[],level:3}],level:2},{value:"\u62e6\u622a\u5668\u6a21\u5757\u5355\u5143\u6d4b\u8bd5",id:"\u62e6\u622a\u5668\u6a21\u5757\u5355\u5143\u6d4b\u8bd5",children:[{value:"\u6d4b\u8bd5\u4ee3\u7801\u7f16\u5199",id:"\u6d4b\u8bd5\u4ee3\u7801\u7f16\u5199-1",children:[],level:3}],level:2}],d={toc:p};function l(e){var n=e.components,t=(0,r.Z)(e,a);return(0,o.kt)("wrapper",(0,s.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"axios\u5b9e\u4f8b\u6a21\u5757\u5355\u5143\u6d4b\u8bd5"},"Axios\u5b9e\u4f8b\u6a21\u5757\u5355\u5143\u6d4b\u8bd5"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"ts-axios")," \u63d0\u4f9b\u4e86 ",(0,o.kt)("inlineCode",{parentName:"p"},"axios.create")," \u9759\u6001\u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u4e2a ",(0,o.kt)("inlineCode",{parentName:"p"},"instance")," \u5b9e\u4f8b\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u8fd9\u4e2a\u6a21\u5757\u505a\u6d4b\u8bd5\u3002"),(0,o.kt)("h3",{id:"\u6d4b\u8bd5\u4ee3\u7801\u7f16\u5199"},"\u6d4b\u8bd5\u4ee3\u7801\u7f16\u5199"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"test/instance.spec.ts"),"\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import axios, { AxiosRequestConfig, AxiosResponse } from '../src/index'\nimport { getAjaxRequest } from './helper'\n\ndescribe('instance', () => {\n  beforeEach(() => {\n    jasmine.Ajax.install()\n  })\n\n  afterEach(() => {\n    jasmine.Ajax.uninstall()\n  })\n\n  test('should make a http request without verb helper', () => {\n    const instance = axios.create()\n\n    instance('/foo')\n\n    return getAjaxRequest().then(request => {\n      expect(request.url).toBe('/foo')\n    })\n  })\n\n  test('should make a http request', () => {\n    const instance = axios.create()\n\n    instance.get('/foo')\n\n    return getAjaxRequest().then(request => {\n      expect(request.url).toBe('/foo')\n      expect(request.method).toBe('GET')\n    })\n  })\n\n  test('should make a post request', () => {\n    const instance = axios.create()\n\n    instance.post('/foo')\n\n    return getAjaxRequest().then(request => {\n      expect(request.method).toBe('POST')\n    })\n  })\n\n  test('should make a put request', () => {\n    const instance = axios.create()\n\n    instance.put('/foo')\n\n    return getAjaxRequest().then(request => {\n      expect(request.method).toBe('PUT')\n    })\n  })\n\n  test('should make a patch request', () => {\n    const instance = axios.create()\n\n    instance.patch('/foo')\n\n    return getAjaxRequest().then(request => {\n      expect(request.method).toBe('PATCH')\n    })\n  })\n\n  test('should make a options request', () => {\n    const instance = axios.create()\n\n    instance.options('/foo')\n\n    return getAjaxRequest().then(request => {\n      expect(request.method).toBe('OPTIONS')\n    })\n  })\n\n  test('should make a delete request', () => {\n    const instance = axios.create()\n\n    instance.delete('/foo')\n\n    return getAjaxRequest().then(request => {\n      expect(request.method).toBe('DELETE')\n    })\n  })\n\n  test('should make a head request', () => {\n    const instance = axios.create()\n\n    instance.head('/foo')\n\n    return getAjaxRequest().then(request => {\n      expect(request.method).toBe('HEAD')\n    })\n  })\n\n  test('should use instance options', () => {\n    const instance = axios.create({ timeout: 1000 })\n\n    instance.get('/foo')\n\n    return getAjaxRequest().then(request => {\n      expect(request.timeout).toBe(1000)\n    })\n  })\n\n  test('should have defaults.headers', () => {\n    const instance = axios.create({ baseURL: 'https://api.example.com' })\n\n    expect(typeof instance.defaults.headers).toBe('object')\n    expect(typeof instance.defaults.headers.common).toBe('object')\n  })\n\n  test('should have interceptors on the instance', done => {\n    axios.interceptors.request.use(config => {\n      config.timeout = 2000\n      return config\n    })\n\n    const instance = axios.create()\n\n    instance.interceptors.request.use(config => {\n      config.withCredentials = true\n      return config\n    })\n\n    let response: AxiosResponse\n    instance.get('/foo').then(res => {\n      response = res\n    })\n\n    getAjaxRequest().then(request => {\n      request.respondWith({\n        status: 200\n      })\n\n      setTimeout(() => {\n        expect(response.config.timeout).toEqual(0)\n        expect(response.config.withCredentials).toEqual(true)\n        done()\n      }, 100)\n    })\n  })\n\n  test('should get the computed uri', () => {\n    const fakeConfig: AxiosRequestConfig = {\n      baseURL: 'https://www.baidu.com/',\n      url: '/user/12345',\n      params: {\n        idClient: 1,\n        idTest: 2,\n        testString: 'thisIsATest'\n      }\n    }\n    expect(axios.getUri(fakeConfig)).toBe(\n      'https://www.baidu.com/user/12345?idClient=1&idTest=2&testString=thisIsATest'\n    )\n  })\n})\n")),(0,o.kt)("p",null,"\u81f3\u6b64\u6211\u4eec\u5b8c\u6210\u4e86 ",(0,o.kt)("inlineCode",{parentName:"p"},"ts-axios")," \u5e93 ",(0,o.kt)("inlineCode",{parentName:"p"},"Axios")," \u5b9e\u4f8b\u6a21\u5757\u76f8\u5173\u4e1a\u52a1\u903b\u8f91\u7684\u6d4b\u8bd5\uff0c\u4e0b\u4e00\u8282\u8bfe\u6211\u4eec\u4f1a\u5bf9\u62e6\u622a\u5668\u6a21\u5757\u505a\u6d4b\u8bd5\u3002"),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"\u62e6\u622a\u5668\u6a21\u5757\u5355\u5143\u6d4b\u8bd5"},"\u62e6\u622a\u5668\u6a21\u5757\u5355\u5143\u6d4b\u8bd5"),(0,o.kt)("p",null,"\u62e6\u622a\u5668\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"ts-axios")," \u5e93\u4e00\u4e2a\u975e\u5e38\u5b9e\u7528\u7684\u529f\u80fd\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u7f16\u5199\u5b83\u7684\u6d4b\u8bd5\u4ee3\u7801\u3002"),(0,o.kt)("h3",{id:"\u6d4b\u8bd5\u4ee3\u7801\u7f16\u5199-1"},"\u6d4b\u8bd5\u4ee3\u7801\u7f16\u5199"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"test/interceptor.spec.ts"),"\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import axios, { AxiosRequestConfig, AxiosResponse } from '../src/index'\nimport { getAjaxRequest } from './helper'\n\ndescribe('interceptors', () => {\n  beforeEach(() => {\n    jasmine.Ajax.install()\n  })\n\n  afterEach(() => {\n    jasmine.Ajax.uninstall()\n  })\n\n  test('should add a request interceptor', () => {\n    const instance = axios.create()\n\n    instance.interceptors.request.use((config: AxiosRequestConfig) => {\n      config.headers.test = 'added by interceptor'\n      return config\n    })\n\n    instance('/foo')\n\n    return getAjaxRequest().then(request => {\n      expect(request.requestHeaders.test).toBe('added by interceptor')\n    })\n  })\n\n  test('should add a request interceptor that returns a new config object', () => {\n    const instance = axios.create()\n\n    instance.interceptors.request.use(() => {\n      return {\n        url: '/bar',\n        method: 'post'\n      }\n    })\n\n    instance('/foo')\n\n    return getAjaxRequest().then(request => {\n      expect(request.method).toBe('POST')\n      expect(request.url).toBe('/bar')\n    })\n  })\n\n  test('should add a request interceptor that returns a promise', done => {\n    const instance = axios.create()\n\n    instance.interceptors.request.use((config: AxiosRequestConfig) => {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          config.headers.async = 'promise'\n          resolve(config)\n        }, 10)\n      })\n    })\n\n    instance('/foo')\n\n    setTimeout(() => {\n      getAjaxRequest().then(request => {\n        expect(request.requestHeaders.async).toBe('promise')\n        done()\n      })\n    }, 100)\n  })\n\n  test('should add multiple request interceptors', () => {\n    const instance = axios.create()\n\n    instance.interceptors.request.use(config => {\n      config.headers.test1 = '1'\n      return config\n    })\n    instance.interceptors.request.use(config => {\n      config.headers.test2 = '2'\n      return config\n    })\n    instance.interceptors.request.use(config => {\n      config.headers.test3 = '3'\n      return config\n    })\n\n    instance('/foo')\n\n    return getAjaxRequest().then(request => {\n      expect(request.requestHeaders.test1).toBe('1')\n      expect(request.requestHeaders.test2).toBe('2')\n      expect(request.requestHeaders.test3).toBe('3')\n    })\n  })\n\n  test('should add a response interceptor', done => {\n    let response: AxiosResponse\n    const instance = axios.create()\n\n    instance.interceptors.response.use(data => {\n      data.data = data.data + ' - modified by interceptor'\n      return data\n    })\n\n    instance('/foo').then(data => {\n      response = data\n    })\n\n    getAjaxRequest().then(request => {\n      request.respondWith({\n        status: 200,\n        responseText: 'OK'\n      })\n\n      setTimeout(() => {\n        expect(response.data).toBe('OK - modified by interceptor')\n        done()\n      }, 100)\n    })\n  })\n\n  test('should add a response interceptor that returns a new data object', done => {\n    let response: AxiosResponse\n    const instance = axios.create()\n\n    instance.interceptors.response.use(() => {\n      return {\n        data: 'stuff',\n        headers: null,\n        status: 500,\n        statusText: 'ERR',\n        request: null,\n        config: {}\n      }\n    })\n\n    instance('/foo').then(res => {\n      response = res\n    })\n\n    getAjaxRequest().then(request => {\n      request.respondWith({\n        status: 200,\n        responseText: 'OK'\n      })\n\n      setTimeout(() => {\n        expect(response.data).toBe('stuff')\n        expect(response.headers).toBeNull()\n        expect(response.status).toBe(500)\n        expect(response.statusText).toBe('ERR')\n        expect(response.request).toBeNull()\n        expect(response.config).toEqual({})\n        done()\n      }, 100)\n    })\n  })\n\n  test('should add a response interceptor that returns a promise', done => {\n    let response: AxiosResponse\n    const instance = axios.create()\n\n    instance.interceptors.response.use(data => {\n      return new Promise(resolve => {\n        // do something async\n        setTimeout(() => {\n          data.data = 'you have been promised!'\n          resolve(data)\n        }, 10)\n      })\n    })\n\n    instance('/foo').then(res => {\n      response = res\n    })\n\n    getAjaxRequest().then(request => {\n      request.respondWith({\n        status: 200,\n        responseText: 'OK'\n      })\n\n      setTimeout(() => {\n        expect(response.data).toBe('you have been promised!')\n        done()\n      }, 100)\n    })\n  })\n\n  test('should add multiple response interceptors', done => {\n    let response: AxiosResponse\n    const instance = axios.create()\n\n    instance.interceptors.response.use(data => {\n      data.data = data.data + '1'\n      return data\n    })\n    instance.interceptors.response.use(data => {\n      data.data = data.data + '2'\n      return data\n    })\n    instance.interceptors.response.use(data => {\n      data.data = data.data + '3'\n      return data\n    })\n\n    instance('/foo').then(data => {\n      response = data\n    })\n\n    getAjaxRequest().then(request => {\n      request.respondWith({\n        status: 200,\n        responseText: 'OK'\n      })\n\n      setTimeout(() => {\n        expect(response.data).toBe('OK123')\n        done()\n      }, 100)\n    })\n  })\n\n  test('should allow removing interceptors', done => {\n    let response: AxiosResponse\n    let intercept\n    const instance = axios.create()\n\n    instance.interceptors.response.use(data => {\n      data.data = data.data + '1'\n      return data\n    })\n    intercept = instance.interceptors.response.use(data => {\n      data.data = data.data + '2'\n      return data\n    })\n    instance.interceptors.response.use(data => {\n      data.data = data.data + '3'\n      return data\n    })\n\n    instance.interceptors.response.eject(intercept)\n    instance.interceptors.response.eject(5)\n\n    instance('/foo').then(data => {\n      response = data\n    })\n\n    getAjaxRequest().then(request => {\n      request.respondWith({\n        status: 200,\n        responseText: 'OK'\n      })\n\n      setTimeout(() => {\n        expect(response.data).toBe('OK13')\n        done()\n      }, 100)\n    })\n  })\n})\n")),(0,o.kt)("p",null,"\u8fd0\u884c\u6d4b\u8bd5\u540e\u6211\u4eec\u53d1\u73b0\u5728\u6d4b\u8bd5\u7528\u4f8b ",(0,o.kt)("inlineCode",{parentName:"p"},"should add a request interceptor that returns a new config object")," \u62a5\u9519\u4e86\uff0c\u662f\u4ee3\u7801\u8fd0\u884c\u7684\u62a5\u9519\uff0c\u800c\u4e0d\u662f\u6d4b\u8bd5\u671f\u671b\u7ed3\u679c\u7684\u62a5\u9519\uff0c\u987a\u7740\u62a5\u9519\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u62a5\u9519\u539f\u56e0\u3002"),(0,o.kt)("p",null,"\u5728 ",(0,o.kt)("inlineCode",{parentName:"p"},"core/xhr.ts")," \u4e2d\uff0c\u6267\u884c\u5230 ",(0,o.kt)("inlineCode",{parentName:"p"},"processHeaders")," \u4e2d\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"Object.keys(headers).forEach")," \u4ee3\u7801\u62a5\u9519\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u62e6\u622a\u5668\u5bf9\u8bf7\u6c42\u914d\u7f6e\u505a\u4e86\u4fee\u6539\uff0c\u5bfc\u81f4 ",(0,o.kt)("inlineCode",{parentName:"p"},"headers")," \u4e3a\u7a7a\uff0c\u6240\u4ee5\u62a5\u9519\u3002"),(0,o.kt)("p",null,"\u4e8e\u662f\u6211\u4eec\u5728\u89e3\u6784\u8d4b\u503c ",(0,o.kt)("inlineCode",{parentName:"p"},"headers")," \u7684\u65f6\u5019\uff0c\u7ed9\u5b83\u6dfb\u52a0\u9ed8\u8ba4\u503c\u5373\u53ef\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const {\n  // ...\n  headers = {}\n} = config\n")),(0,o.kt)("p",null,"\u518d\u6b21\u8fd0\u884c\u6d4b\u8bd5\uff0c\u53d1\u73b0\u5168\u90e8\u6d4b\u8bd5\u901a\u8fc7\u3002"),(0,o.kt)("p",null,"\u81f3\u6b64\uff0c\u6211\u4eec\u5b8c\u6210\u4e86 ",(0,o.kt)("inlineCode",{parentName:"p"},"ts-axios")," \u5e93\u5bf9\u62e6\u622a\u5668\u6a21\u5757\u7684\u5355\u5143\u6d4b\u8bd5\uff0c\u4e0b\u8282\u8bfe\u6211\u4eec\u6765\u6d4b\u8bd5 ",(0,o.kt)("inlineCode",{parentName:"p"},"mergeConfig")," \u6a21\u5757\u7684\u4e1a\u52a1\u903b\u8f91\u3002"))}l.isMDXComponent=!0}}]);
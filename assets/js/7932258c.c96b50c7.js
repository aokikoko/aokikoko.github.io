"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[59],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return f}});var r=t(67294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(t),f=s,m=c["".concat(l,".").concat(f)]||c[f]||d[f]||a;return t?r.createElement(m,o(o({ref:n},p),{},{components:t})):r.createElement(m,o({ref:n},p))}));function f(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var a=t.length,o=new Array(a);o[0]=c;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:s,o[1]=i;for(var u=2;u<a;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},65487:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return l},default:function(){return c},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p}});var r=t(87462),s=t(63366),a=(t(67294),t(3905)),o=["components"],i={title:"[TS] ts-axios(24) - \u5355\u5143\u6d4b\u8bd5(\u5269\u4f59\u6a21\u5757)",sidebar_position:32},l=void 0,u={unversionedId:"TypeScript/ts-axios-24",id:"TypeScript/ts-axios-24",title:"[TS] ts-axios(24) - \u5355\u5143\u6d4b\u8bd5(\u5269\u4f59\u6a21\u5757)",description:"----------------------------------------------------------------",source:"@site/docs/TypeScript/ts-axios-24.md",sourceDirName:"TypeScript",slug:"/TypeScript/ts-axios-24",permalink:"/docs/TypeScript/ts-axios-24",editUrl:"https://github.com/aokikoko/aokikoko.github.io/blob/main/website/docs/TypeScript/ts-axios-24.md",tags:[],version:"current",sidebarPosition:32,frontMatter:{title:"[TS] ts-axios(24) - \u5355\u5143\u6d4b\u8bd5(\u5269\u4f59\u6a21\u5757)",sidebar_position:32},sidebar:"tutorialSidebar",previous:{title:"[TS] ts-axios(23) - \u5355\u5143\u6d4b\u8bd5(mergeConfig\u6a21\u5757\u4e0e\u8bf7\u6c42\u53d6\u6d88\u6a21\u5757)",permalink:"/docs/TypeScript/ts-axios-23"},next:{title:"[TS] ts-axios(25) - \u7f16\u8bd1\u53d1\u5e03",permalink:"/docs/TypeScript/ts-axios-25"}},p=[{value:"defaults \u6a21\u5757\u5355\u5143\u6d4b\u8bd5",id:"defaults-\u6a21\u5757\u5355\u5143\u6d4b\u8bd5",children:[],level:2},{value:"transform \u6a21\u5757\u5355\u5143\u6d4b\u8bd5",id:"transform-\u6a21\u5757\u5355\u5143\u6d4b\u8bd5",children:[],level:2},{value:"xsrf \u6a21\u5757\u5355\u5143\u6d4b\u8bd5",id:"xsrf-\u6a21\u5757\u5355\u5143\u6d4b\u8bd5",children:[],level:2},{value:"\u4e0a\u4f20\u4e0b\u8f7d\u6a21\u5757\u5355\u5143\u6d4b\u8bd5",id:"\u4e0a\u4f20\u4e0b\u8f7d\u6a21\u5757\u5355\u5143\u6d4b\u8bd5",children:[],level:2},{value:"HTTP \u6388\u6743\u6a21\u5757\u5355\u5143\u6d4b\u8bd5",id:"http-\u6388\u6743\u6a21\u5757\u5355\u5143\u6d4b\u8bd5",children:[],level:2},{value:"\u9759\u6001\u65b9\u6cd5\u6a21\u5757\u5355\u5143\u6d4b\u8bd5",id:"\u9759\u6001\u65b9\u6cd5\u6a21\u5757\u5355\u5143\u6d4b\u8bd5",children:[],level:2},{value:"\u8865\u5145\u672a\u8986\u76d6\u7684\u4ee3\u7801\u6d4b\u8bd5",id:"\u8865\u5145\u672a\u8986\u76d6\u7684\u4ee3\u7801\u6d4b\u8bd5",children:[],level:2}],d={toc:p};function c(e){var n=e.components,t=(0,s.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"defaults-\u6a21\u5757\u5355\u5143\u6d4b\u8bd5"},"defaults \u6a21\u5757\u5355\u5143\u6d4b\u8bd5"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"defaults")," \u6a21\u5757\u4e3a\u8bf7\u6c42\u914d\u7f6e\u63d0\u4f9b\u4e86\u4e00\u4e9b\u9ed8\u8ba4\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u5176\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"test/defaults.spec.ts"),"\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import axios, { AxiosTransformer } from '../src/index'\nimport { getAjaxRequest } from './helper'\nimport { deepMerge } from '../src/helpers/util'\n\ndescribe('defaults', () => {\n  beforeEach(() => {\n    jasmine.Ajax.install()\n  })\n\n  afterEach(() => {\n    jasmine.Ajax.uninstall()\n  })\n\n  test('should transform request json', () => {\n    expect((axios.defaults.transformRequest as AxiosTransformer[])[0]({ foo: 'bar' })).toBe('{\"foo\":\"bar\"}')\n  })\n\n  test('should do nothing to request string', () => {\n    expect((axios.defaults.transformRequest as AxiosTransformer[])[0]('foo=bar')).toBe('foo=bar')\n  })\n\n  test('should transform response json', () => {\n    const data = (axios.defaults.transformResponse as AxiosTransformer[])[0]('{\"foo\":\"bar\"}')\n\n    expect(typeof data).toBe('object')\n    expect(data.foo).toBe('bar')\n  })\n\n  test('should do nothing to response string', () => {\n    expect((axios.defaults.transformResponse as AxiosTransformer[])[0]('foo=bar')).toBe('foo=bar')\n  })\n\n  test('should use global defaults config', () => {\n    axios('/foo')\n\n    return getAjaxRequest().then(request => {\n      expect(request.url).toBe('/foo')\n    })\n  })\n\n  test('should use modified defaults config', () => {\n    axios.defaults.baseURL = 'http://example.com/'\n\n    axios('/foo')\n\n    return getAjaxRequest().then(request => {\n      expect(request.url).toBe('http://example.com/foo')\n      delete axios.defaults.baseURL\n    })\n  })\n\n  test('should use request config', () => {\n    axios('/foo', {\n      baseURL: 'http://www.example.com'\n    })\n\n    return getAjaxRequest().then(request => {\n      expect(request.url).toBe('http://www.example.com/foo')\n    })\n  })\n\n  test('should use default config for custom instance', () => {\n    const instance = axios.create({\n      xsrfCookieName: 'CUSTOM-XSRF-TOKEN',\n      xsrfHeaderName: 'X-CUSTOM-XSRF-TOKEN'\n    })\n    document.cookie = instance.defaults.xsrfCookieName + '=foobarbaz'\n\n    instance.get('/foo')\n\n    return getAjaxRequest().then(request => {\n      expect(request.requestHeaders[instance.defaults.xsrfHeaderName!]).toBe('foobarbaz')\n      document.cookie =\n        instance.defaults.xsrfCookieName +\n        '=;expires=' +\n        new Date(Date.now() - 86400000).toUTCString()\n    })\n  })\n\n  test('should use GET headers', () => {\n    axios.defaults.headers.get['X-CUSTOM-HEADER'] = 'foo'\n    axios.get('/foo')\n\n    return getAjaxRequest().then(request => {\n      expect(request.requestHeaders['X-CUSTOM-HEADER']).toBe('foo')\n      delete axios.defaults.headers.get['X-CUSTOM-HEADER']\n    })\n  })\n\n  test('should use POST headers', () => {\n    axios.defaults.headers.post['X-CUSTOM-HEADER'] = 'foo'\n    axios.post('/foo', {})\n\n    return getAjaxRequest().then(request => {\n      expect(request.requestHeaders['X-CUSTOM-HEADER']).toBe('foo')\n      delete axios.defaults.headers.post['X-CUSTOM-HEADER']\n    })\n  })\n\n  test('should use header config', () => {\n    const instance = axios.create({\n      headers: {\n        common: {\n          'X-COMMON-HEADER': 'commonHeaderValue'\n        },\n        get: {\n          'X-GET-HEADER': 'getHeaderValue'\n        },\n        post: {\n          'X-POST-HEADER': 'postHeaderValue'\n        }\n      }\n    })\n\n    instance.get('/foo', {\n      headers: {\n        'X-FOO-HEADER': 'fooHeaderValue',\n        'X-BAR-HEADER': 'barHeaderValue'\n      }\n    })\n\n    return getAjaxRequest().then(request => {\n      expect(request.requestHeaders).toEqual(\n        deepMerge(axios.defaults.headers.common, axios.defaults.headers.get, {\n          'X-COMMON-HEADER': 'commonHeaderValue',\n          'X-GET-HEADER': 'getHeaderValue',\n          'X-FOO-HEADER': 'fooHeaderValue',\n          'X-BAR-HEADER': 'barHeaderValue'\n        })\n      )\n    })\n  })\n\n  test('should be used by custom instance if set before instance created', () => {\n    axios.defaults.baseURL = 'http://example.org/'\n    const instance = axios.create()\n\n    instance.get('/foo')\n\n    return getAjaxRequest().then(request => {\n      expect(request.url).toBe('http://example.org/foo')\n      delete axios.defaults.baseURL\n    })\n  })\n\n  test('should not be used by custom instance if set after instance created', () => {\n    const instance = axios.create()\n    axios.defaults.baseURL = 'http://example.org/'\n\n    instance.get('/foo')\n\n    return getAjaxRequest().then(request => {\n      expect(request.url).toBe('/foo')\n    })\n  })\n})\n")),(0,a.kt)("h2",{id:"transform-\u6a21\u5757\u5355\u5143\u6d4b\u8bd5"},"transform \u6a21\u5757\u5355\u5143\u6d4b\u8bd5"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"transform")," \u6a21\u5757\u7528\u6765\u5b9a\u4e49\u8bf7\u6c42\u548c\u54cd\u5e94\u7684\u8f6c\u6362\u65b9\u6cd5\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u5176\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import axios, { AxiosResponse, AxiosTransformer } from '../src/index'\nimport { getAjaxRequest } from './helper'\n\ndescribe('transform', () => {\n  beforeEach(() => {\n    jasmine.Ajax.install()\n  })\n\n  afterEach(() => {\n    jasmine.Ajax.uninstall()\n  })\n\n  test('should transform JSON to string', () => {\n    const data = {\n      foo: 'bar'\n    }\n\n    axios.post('/foo', data)\n\n    return getAjaxRequest().then(request => {\n      expect(request.params).toBe('{\"foo\":\"bar\"}')\n    })\n  })\n\n  test('should transform string to JSON', done => {\n    let response: AxiosResponse\n\n    axios('/foo').then(res => {\n      response = res\n    })\n\n    getAjaxRequest().then(request => {\n      request.respondWith({\n        status: 200,\n        responseText: '{\"foo\": \"bar\"}'\n      })\n\n      setTimeout(() => {\n        expect(typeof response.data).toBe('object')\n        expect(response.data.foo).toBe('bar')\n        done()\n      }, 100)\n    })\n  })\n\n  test('should override default transform', () => {\n    const data = {\n      foo: 'bar'\n    }\n\n    axios.post('/foo', data, {\n      transformRequest(data) {\n        return data\n      }\n    })\n\n    return getAjaxRequest().then(request => {\n      expect(request.params).toEqual({ foo: 'bar' })\n    })\n  })\n\n  test('should allow an Array of transformers', () => {\n    const data = {\n      foo: 'bar'\n    }\n\n    axios.post('/foo', data, {\n      transformRequest: (axios.defaults.transformRequest as AxiosTransformer[]).concat(function(\n        data\n      ) {\n        return data.replace('bar', 'baz')\n      })\n    })\n\n    return getAjaxRequest().then(request => {\n      expect(request.params).toBe('{\"foo\":\"baz\"}')\n    })\n  })\n\n  test('should allowing mutating headers', () => {\n    const token = Math.floor(Math.random() * Math.pow(2, 64)).toString(36)\n\n    axios('/foo', {\n      transformRequest: (data, headers) => {\n        headers['X-Authorization'] = token\n        return data\n      }\n    })\n\n    return getAjaxRequest().then(request => {\n      expect(request.requestHeaders['X-Authorization']).toEqual(token)\n    })\n  })\n})\n")),(0,a.kt)("h2",{id:"xsrf-\u6a21\u5757\u5355\u5143\u6d4b\u8bd5"},"xsrf \u6a21\u5757\u5355\u5143\u6d4b\u8bd5"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"xsrf")," \u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u5957\u9632\u5fa1 ",(0,a.kt)("inlineCode",{parentName:"p"},"xsrf")," \u653b\u51fb\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u5176\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"test/xsrf.spec.ts"),"\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import axios from '../src/index'\nimport { getAjaxRequest } from './helper'\n\ndescribe('xsrf', () => {\n  beforeEach(() => {\n    jasmine.Ajax.install()\n  })\n\n  afterEach(() => {\n    jasmine.Ajax.uninstall()\n    document.cookie =\n      axios.defaults.xsrfCookieName + '=;expires=' + new Date(Date.now() - 86400000).toUTCString()\n  })\n\n  test('should not set xsrf header if cookie is null', () => {\n    axios('/foo')\n\n    return getAjaxRequest().then(request => {\n      expect(request.requestHeaders[axios.defaults.xsrfHeaderName!]).toBeUndefined()\n    })\n  })\n\n  test('should set xsrf header if cookie is set', () => {\n    document.cookie = axios.defaults.xsrfCookieName + '=12345'\n\n    axios('/foo')\n\n    return getAjaxRequest().then(request => {\n      expect(request.requestHeaders[axios.defaults.xsrfHeaderName!]).toBe('12345')\n    })\n  })\n\n  test('should not set xsrf header for cross origin', () => {\n    document.cookie = axios.defaults.xsrfCookieName + '=12345'\n\n    axios('http://example.com/')\n\n    return getAjaxRequest().then(request => {\n      expect(request.requestHeaders[axios.defaults.xsrfHeaderName!]).toBeUndefined()\n    })\n  })\n\n  test('should set xsrf header for cross origin when using withCredentials', () => {\n    document.cookie = axios.defaults.xsrfCookieName + '=12345'\n\n    axios('http://example.com/', {\n      withCredentials: true\n    })\n\n    return getAjaxRequest().then(request => {\n      expect(request.requestHeaders[axios.defaults.xsrfHeaderName!]).toBe('12345')\n    })\n  })\n})\n")),(0,a.kt)("p",null,"\u6ce8\u610f\u5728 ",(0,a.kt)("inlineCode",{parentName:"p"},"afterEach")," \u51fd\u6570\u4e2d\u6211\u4eec\u6e05\u7a7a\u4e86 ",(0,a.kt)("inlineCode",{parentName:"p"},"xsrf")," \u76f8\u5173\u7684 cookie\u3002"),(0,a.kt)("h2",{id:"\u4e0a\u4f20\u4e0b\u8f7d\u6a21\u5757\u5355\u5143\u6d4b\u8bd5"},"\u4e0a\u4f20\u4e0b\u8f7d\u6a21\u5757\u5355\u5143\u6d4b\u8bd5"),(0,a.kt)("p",null,"\u4e0a\u4f20\u4e0b\u8f7d\u6a21\u5757\u5141\u8bb8\u6211\u4eec\u76d1\u542c\u4e0a\u4f20\u548c\u4e0b\u8f7d\u7684\u8fdb\u5ea6\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u5176\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"test/progress.spec.ts"),"\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import axios from '../src/index'\nimport { getAjaxRequest } from './helper'\n\ndescribe('progress', () => {\n  beforeEach(() => {\n    jasmine.Ajax.install()\n  })\n\n  afterEach(() => {\n    jasmine.Ajax.uninstall()\n  })\n\n  test('should add a download progress handler', () => {\n    const progressSpy = jest.fn()\n\n    axios('/foo', { onDownloadProgress: progressSpy })\n\n    return getAjaxRequest().then(request => {\n      request.respondWith({\n        status: 200,\n        responseText: '{\"foo\": \"bar\"}'\n      })\n      expect(progressSpy).toHaveBeenCalled()\n    })\n  })\n\n  test('should add a upload progress handler', () => {\n    const progressSpy = jest.fn()\n\n    axios('/foo', { onUploadProgress: progressSpy })\n\n    return getAjaxRequest().then(request => {\n      // Jasmine AJAX doesn't trigger upload events.Waiting for jest-ajax fix\n      // expect(progressSpy).toHaveBeenCalled()\n    })\n  })\n})\n")),(0,a.kt)("p",null,"\u6ce8\u610f\uff0c\u7531\u4e8e ",(0,a.kt)("inlineCode",{parentName:"p"},"jasmine-ajax")," \u63d2\u4ef6\u4e0d\u4f1a\u6d3e\u53d1 ",(0,a.kt)("inlineCode",{parentName:"p"},"upload")," \u4e8b\u4ef6\uff0c\u8fd9\u4e2a\u672a\u6765\u53ef\u4ee5\u901a\u8fc7\u6211\u4eec\u81ea\u5df1\u7f16\u5199\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"jest-ajax")," \u63d2\u4ef6\u6765\u89e3\u51b3\uff0c\u76ee\u524d\u4e0d\u5199\u65ad\u8a00\u7684\u60c5\u51b5\u5b83\u4f1a\u76f4\u63a5\u901a\u8fc7\u3002"),(0,a.kt)("h2",{id:"http-\u6388\u6743\u6a21\u5757\u5355\u5143\u6d4b\u8bd5"},"HTTP \u6388\u6743\u6a21\u5757\u5355\u5143\u6d4b\u8bd5"),(0,a.kt)("p",null,"HTTP \u6388\u6743\u6a21\u5757\u4e3a\u6211\u4eec\u5728\u8bf7\u6c42\u5934\u4e2d\u6dfb\u52a0 ",(0,a.kt)("inlineCode",{parentName:"p"},"Authorization")," \u5b57\u6bb5\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u5176\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"test/auth.spec.ts"),"\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import axios from '../src/index'\nimport { getAjaxRequest } from './helper'\n\ndescribe('auth', () => {\n  beforeEach(() => {\n    jasmine.Ajax.install()\n  })\n\n  afterEach(() => {\n    jasmine.Ajax.uninstall()\n  })\n\n  test('should accept HTTP Basic auth with username/password', () => {\n    axios('/foo', {\n      auth: {\n        username: 'Aladdin',\n        password: 'open sesame'\n      }\n    })\n\n    return getAjaxRequest().then(request => {\n      expect(request.requestHeaders['Authorization']).toBe('Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==')\n    })\n  })\n\n  test('should fail to encode HTTP Basic auth credentials with non-Latin1 characters', () => {\n    return axios('/foo', {\n      auth: {\n        username: 'Alad\xdf\xe7\xa3\u2603din',\n        password: 'open sesame'\n      }\n    })\n      .then(() => {\n        throw new Error(\n          'Should not succeed to make a HTTP Basic auth request with non-latin1 chars in credentials.'\n        )\n      })\n      .catch(error => {\n        expect(/character/i.test(error.message)).toBeTruthy()\n      })\n  })\n})\n")),(0,a.kt)("h2",{id:"\u9759\u6001\u65b9\u6cd5\u6a21\u5757\u5355\u5143\u6d4b\u8bd5"},"\u9759\u6001\u65b9\u6cd5\u6a21\u5757\u5355\u5143\u6d4b\u8bd5"),(0,a.kt)("p",null,"\u9759\u6001\u65b9\u6cd5\u6a21\u5757\u4e3a ",(0,a.kt)("inlineCode",{parentName:"p"},"axios")," \u5bf9\u8c61\u6dfb\u52a0\u4e86 2 \u4e2a\u9759\u6001\u65b9\u6cd5\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u5176\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"test/static.spec.ts"),"\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import axios from '../src/index'\n\ndescribe('promise', () => {\n  test('should support all', done => {\n    let fulfilled = false\n\n    axios.all([true, false]).then(arg => {\n      fulfilled = arg[0]\n    })\n\n    setTimeout(() => {\n      expect(fulfilled).toBeTruthy()\n      done()\n    }, 100)\n  })\n\n  test('should support spread', done => {\n    let sum = 0\n    let fulfilled = false\n    let result: any\n\n    axios\n      .all([123, 456])\n      .then(\n        axios.spread((a, b) => {\n          sum = a + b\n          fulfilled = true\n          return 'hello world'\n        })\n      )\n      .then(res => {\n        result = res\n      })\n\n    setTimeout(() => {\n      expect(fulfilled).toBeTruthy()\n      expect(sum).toBe(123 + 456)\n      expect(result).toBe('hello world')\n      done()\n    }, 100)\n  })\n})\n")),(0,a.kt)("h2",{id:"\u8865\u5145\u672a\u8986\u76d6\u7684\u4ee3\u7801\u6d4b\u8bd5"},"\u8865\u5145\u672a\u8986\u76d6\u7684\u4ee3\u7801\u6d4b\u8bd5"),(0,a.kt)("p",null,"\u6211\u4eec\u53d1\u73b0\uff0c\u8dd1\u5b8c\u6d4b\u8bd5\u540e\uff0c\u4ecd\u6709\u4e00\u4e9b\u4ee3\u7801\u6ca1\u6709\u8986\u76d6\u5230\u6d4b\u8bd5\uff0c\u5176\u4e2d ",(0,a.kt)("inlineCode",{parentName:"p"},"core/xhr.ts")," \u6587\u4ef6\u7684\u7b2c 43 \u884c\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"if (responseType) {\n  request.responseType = responseType\n}\n")),(0,a.kt)("p",null,"\u6211\u4eec\u5e76\u672a\u5728\u6d4b\u8bd5\u4e2d\u8bbe\u7f6e\u8fc7 ",(0,a.kt)("inlineCode",{parentName:"p"},"responseType"),"\uff0c\u56e0\u6b64\u6211\u4eec\u5728 ",(0,a.kt)("inlineCode",{parentName:"p"},"test/requests.spect.ts")," \u6587\u4ef6\u4e2d\u8865\u5145\u76f8\u5173\u6d4b\u8bd5\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"test('should support array buffer response', done => {\n  let response: AxiosResponse\n\n  function str2ab(str: string) {\n    const buff = new ArrayBuffer(str.length * 2)\n    const view = new Uint16Array(buff)\n    for (let i = 0; i < str.length; i++) {\n      view[i] = str.charCodeAt(i)\n    }\n    return buff\n  }\n\n  axios('/foo', {\n    responseType: 'arraybuffer'\n  }).then(data => {\n    response = data\n  })\n\n  getAjaxRequest().then(request => {\n    request.respondWith({\n      status: 200,\n      // @ts-ignore\n      response: str2ab('Hello world')\n    })\n\n    setTimeout(() => {\n      expect(response.data.byteLength).toBe(22)\n      done()\n    }, 100)\n  })\n})\n")),(0,a.kt)("p",null,"\u53e6\u5916\u6211\u4eec\u53d1\u73b0 ",(0,a.kt)("inlineCode",{parentName:"p"},"core/xhr.ts")," \u6587\u4ef6\u7684\u7b2c 13 \u884c\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"method = 'get'\n")),(0,a.kt)("p",null,"\u5206\u652f\u6ca1\u6709\u6d4b\u8bd5\u5b8c\u5168\u3002\u56e0\u4e3a\u5b9e\u9645\u4e0a\u4ee3\u7801\u6267\u884c\u5230\u8fd9\u7684\u65f6\u5019 ",(0,a.kt)("inlineCode",{parentName:"p"},"method")," \u662f\u4e00\u5b9a\u4f1a\u6709\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u5fc5\u4e3a\u5176\u6307\u5b9a\u9ed8\u8ba4\u503c\uff0c\u53e6\u5916\u8fd8\u9700\u8981\u5728 ",(0,a.kt)("inlineCode",{parentName:"p"},"method!.toUpperCase()")," \u7684\u65f6\u5019\u4f7f\u7528\u975e\u7a7a\u65ad\u8a00\u3002"),(0,a.kt)("p",null,"\u540c\u65f6",(0,a.kt)("inlineCode",{parentName:"p"},"core/xhr.ts")," \u6587\u4ef6\u7684\u7b2c 66 \u884c\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"const responseData = responseType !== 'text' ? request.response : request.responseText\n")),(0,a.kt)("p",null,"\u5206\u652f\u4e5f\u6ca1\u6709\u6d4b\u8bd5\u5b8c\u5168\u3002\u8fd9\u91cc\u6211\u4eec\u5e94\u8be5\u5148\u5224\u65ad\u5b58\u5728 ",(0,a.kt)("inlineCode",{parentName:"p"},"responseType")," \u5b58\u5728\u7684\u60c5\u51b5\u4e0b\u518d\u53bb\u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"text")," \u505a\u5bf9\u6bd4\uff0c\u9700\u8981\u4fee\u6539\u903b\u8f91\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"const responseData = responseType && responseType !== 'text' ? request.response : request.responseText\n")),(0,a.kt)("p",null,"\u8fd9\u6837\u518d\u6b21\u8dd1\u6d4b\u8bd5\uff0c\u5c31\u8986\u76d6\u4e86\u6240\u6709\u7684\u5206\u652f\u3002"),(0,a.kt)("p",null,"\u5230\u6b64\u4e3a\u6b62\uff0c\u9664\u4e86\u6211\u4eec\u4e4b\u524d\u8bf4\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"helpers/error.ts")," \u6a21\u5757\u4e2d\u5bf9\u4e8e ",(0,a.kt)("inlineCode",{parentName:"p"},"super")," \u7684\u6d4b\u8bd5\u7684\u5206\u652f\u8986\u76d6\u7387\u6ca1\u8fbe\u5230 100%\uff0c\u5176\u5b83\u6a21\u5757\u5747\u8fbe\u5230 100% \u7684\u6d4b\u8bd5\u8986\u76d6\u7387\u3002"),(0,a.kt)("p",null,"\u6709\u4e9b\u6709\u5f3a\u8feb\u75c7\u7684\u540c\u5b66\u53ef\u80fd\u4f1a\u89c9\u5f97\uff0c\u80fd\u4e0d\u80fd\u901a\u8fc7\u67d0\u79cd\u624b\u6bb5\u8ba9\u5b83\u7684\u8986\u76d6\u7387\u8fbe\u5230 100% \u5462\uff0c\u8fd9\u91cc\u5176\u5b9e\u6709\u4e00\u4e2a\u5947\u6280\u6deb\u5de7\uff0c\u5728 ",(0,a.kt)("inlineCode",{parentName:"p"},"helpers/error.ts")," \u6587\u4ef6\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"constructor")," \u51fd\u6570\u4e0a\u65b9\u52a0\u4e00\u4e2a ",(0,a.kt)("inlineCode",{parentName:"p"},"/* istanbul ignore next */")," \u6ce8\u91ca\uff0c\u8fd9\u6837\u5176\u5b9e\u76f8\u5f53\u4e8e\u5ffd\u7565\u4e86\u6574\u4e2a\u6784\u9020\u51fd\u6570\u7684\u6d4b\u8bd5\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u8fbe\u5230 100% \u7684\u8986\u76d6\u7387\u4e86\u3002"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"/* istanbul ignore next */")," \u5728\u6211\u4eec\u53bb\u9605\u8bfb\u4e00\u4e9b\u5f00\u6e90\u4ee3\u7801\u7684\u65f6\u5019\u7ecf\u5e38\u4f1a\u9047\u5230\uff0c\u4e3b\u8981\u7528\u9014\u5c31\u662f\u7528\u6765\u5ffd\u7565\u6d4b\u8bd5\u7528\u7684\uff0c\u8fd9\u4e2a\u6280\u5de7\u4e0d\u53ef\u6ee5\u7528\uff0c\u9664\u975e\u4f60\u660e\u786e\u7684\u77e5\u9053\u8fd9\u6bb5\u4ee3\u7801\u4e0d\u9700\u8981\u6d4b\u8bd5\uff0c\u5426\u5219\u4f60\u4e0d\u5e94\u8be5\u4f7f\u7528\u5b83\u3002\u6ee5\u7528\u5c31\u5931\u53bb\u4e86\u5355\u5143\u6d4b\u8bd5\u7684\u610f\u4e49\u4e86\u3002"),(0,a.kt)("p",null,"\u81f3\u6b64\uff0c\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u6574\u4e2a ",(0,a.kt)("inlineCode",{parentName:"p"},"ts-axios")," \u5e93\u7684\u6d4b\u8bd5\u4e86\uff0c\u6211\u4eec\u4e5f\u6210\u529f\u5730\u8ba9\u6d4b\u8bd5\u8986\u76d6\u7387\u8fbe\u5230\u76ee\u6807 99% \u4ee5\u4e0a\u3002\u4e0b\u4e00\u7ae0\u6211\u4f1a\u6559\u5927\u5bb6\u5982\u679c\u6253\u5305\u6784\u5efa\u548c\u53d1\u5e03\u6211\u4eec\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"ts-axios")," \u5e93\u3002"))}c.isMDXComponent=!0}}]);
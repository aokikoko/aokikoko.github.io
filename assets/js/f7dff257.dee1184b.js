"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[73],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return f}});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=a.createContext({}),i=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=i(e.components);return a.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=i(t),f=o,m=d["".concat(l,".").concat(f)]||d[f]||p[f]||r;return t?a.createElement(m,c(c({ref:n},u),{},{components:t})):a.createElement(m,c({ref:n},u))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,c=new Array(r);c[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,c[1]=s;for(var i=2;i<r;i++)c[i]=t[i];return a.createElement.apply(null,c)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},65315:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return s},metadata:function(){return i},toc:function(){return u}});var a=t(87462),o=t(63366),r=(t(67294),t(3905)),c=["components"],s={title:"[TS] ts-axios(23) - \u5355\u5143\u6d4b\u8bd5(mergeConfig\u6a21\u5757\u4e0e\u8bf7\u6c42\u53d6\u6d88\u6a21\u5757)",sidebar_position:31},l=void 0,i={unversionedId:"TypeScript/ts-axios-23",id:"TypeScript/ts-axios-23",title:"[TS] ts-axios(23) - \u5355\u5143\u6d4b\u8bd5(mergeConfig\u6a21\u5757\u4e0e\u8bf7\u6c42\u53d6\u6d88\u6a21\u5757)",description:"----------------------------------------------------------------",source:"@site/docs/TypeScript/ts-axios-23.md",sourceDirName:"TypeScript",slug:"/TypeScript/ts-axios-23",permalink:"/docs/TypeScript/ts-axios-23",editUrl:"https://github.com/aokikoko/aokikoko.github.io/blob/main/website/docs/TypeScript/ts-axios-23.md",tags:[],version:"current",sidebarPosition:31,frontMatter:{title:"[TS] ts-axios(23) - \u5355\u5143\u6d4b\u8bd5(mergeConfig\u6a21\u5757\u4e0e\u8bf7\u6c42\u53d6\u6d88\u6a21\u5757)",sidebar_position:31},sidebar:"tutorialSidebar",previous:{title:"[TS] ts-axios(22) - \u5355\u5143\u6d4b\u8bd5(Axios\u5b9e\u4f8b\u6a21\u5757\u4e0e\u62e6\u622a\u5668\u6a21\u5757)",permalink:"/docs/TypeScript/ts-axios-22"},next:{title:"[TS] ts-axios(24) - \u5355\u5143\u6d4b\u8bd5(\u5269\u4f59\u6a21\u5757)",permalink:"/docs/TypeScript/ts-axios-24"}},u=[{value:"mergeConfig\u6a21\u5757\u5355\u5143\u6d4b\u8bd5",id:"mergeconfig\u6a21\u5757\u5355\u5143\u6d4b\u8bd5",children:[{value:"\u6d4b\u8bd5\u4ee3\u7801\u7f16\u5199",id:"\u6d4b\u8bd5\u4ee3\u7801\u7f16\u5199",children:[],level:3}],level:2},{value:"\u8bf7\u6c42\u53d6\u6d88\u6a21\u5757\u5355\u5143\u6d4b\u8bd5",id:"\u8bf7\u6c42\u53d6\u6d88\u6a21\u5757\u5355\u5143\u6d4b\u8bd5",children:[{value:"Cancel \u7c7b\u5355\u5143\u6d4b\u8bd5",id:"cancel-\u7c7b\u5355\u5143\u6d4b\u8bd5",children:[],level:3},{value:"CancelToken \u7c7b\u5355\u5143\u6d4b\u8bd5",id:"canceltoken-\u7c7b\u5355\u5143\u6d4b\u8bd5",children:[],level:3},{value:"Cancel \u4e1a\u52a1\u903b\u8f91\u5355\u5143\u6d4b\u8bd5",id:"cancel-\u4e1a\u52a1\u903b\u8f91\u5355\u5143\u6d4b\u8bd5",children:[],level:3}],level:2}],p={toc:u};function d(e){var n=e.components,t=(0,o.Z)(e,c);return(0,r.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"mergeconfig\u6a21\u5757\u5355\u5143\u6d4b\u8bd5"},"mergeConfig\u6a21\u5757\u5355\u5143\u6d4b\u8bd5"),(0,r.kt)("p",null,"\u5408\u5e76\u914d\u7f6e\u662f ",(0,r.kt)("inlineCode",{parentName:"p"},"ts-axios")," \u6838\u5fc3\u6d41\u7a0b\u4e2d\u975e\u5e38\u91cd\u8981\u7684\u4e00\u4e2a\u73af\u8282\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u5b83\u7684\u5404\u79cd\u60c5\u51b5\u53bb\u7f16\u5199\u6d4b\u8bd5\u3002"),(0,r.kt)("h3",{id:"\u6d4b\u8bd5\u4ee3\u7801\u7f16\u5199"},"\u6d4b\u8bd5\u4ee3\u7801\u7f16\u5199"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"test/mergeConfig.spec.ts"),"\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import axios from '../src/index'\nimport mergeConfig from '../src/core/mergeConfig'\n\ndescribe('mergeConfig', () => {\n  const defaults = axios.defaults\n\n  test('should accept undefined for second argument', () => {\n    expect(mergeConfig(defaults, undefined)).toEqual(defaults)\n  })\n\n  test('should accept an object for second argument', () => {\n    expect(mergeConfig(defaults, {})).toEqual(defaults)\n  })\n\n  test('should not leave references', () => {\n    const merged = mergeConfig(defaults, {})\n    expect(merged).not.toBe(defaults)\n    expect(merged.headers).not.toBe(defaults.headers)\n  })\n\n  test('should allow setting request options', () => {\n    const config = {\n      url: '__sample url__',\n      params: '__sample params__',\n      data: { foo: true }\n    }\n    const merged = mergeConfig(defaults, config)\n    expect(merged.url).toBe(config.url)\n    expect(merged.params).toBe(config.params)\n    expect(merged.data).toEqual(config.data)\n  })\n\n  test('should not inherit request options', () => {\n    const localDefaults = {\n      url: '__sample url__',\n      params: '__sample params__',\n      data: { foo: true }\n    }\n    const merged = mergeConfig(localDefaults, {})\n    expect(merged.url).toBeUndefined()\n    expect(merged.params).toBeUndefined()\n    expect(merged.data).toBeUndefined()\n  })\n\n  test('should return default headers if pass config2 with undefined', () => {\n    expect(\n      mergeConfig(\n        {\n          headers: 'x-mock-header'\n        },\n        undefined\n      )\n    ).toEqual({\n      headers: 'x-mock-header'\n    })\n  })\n\n  test('should merge auth, headers with defaults', () => {\n    expect(\n      mergeConfig(\n        {\n          auth: undefined\n        },\n        {\n          auth: {\n            username: 'foo',\n            password: 'test'\n          }\n        }\n      )\n    ).toEqual({\n      auth: {\n        username: 'foo',\n        password: 'test'\n      }\n    })\n    expect(\n      mergeConfig(\n        {\n          auth: {\n            username: 'foo',\n            password: 'test'\n          }\n        },\n        {\n          auth: {\n            username: 'baz',\n            password: 'foobar'\n          }\n        }\n      )\n    ).toEqual({\n      auth: {\n        username: 'baz',\n        password: 'foobar'\n      }\n    })\n  })\n\n  test('should overwrite auth, headers with a non-object value', () => {\n    expect(\n      mergeConfig(\n        {\n          headers: {\n            common: {\n              Accept: 'application/json, text/plain, */*'\n            }\n          }\n        },\n        {\n          headers: null\n        }\n      )\n    ).toEqual({\n      headers: null\n    })\n  })\n\n  test('should allow setting other options', () => {\n    const merged = mergeConfig(defaults, {\n      timeout: 123\n    })\n    expect(merged.timeout).toBe(123)\n  })\n})\n")),(0,r.kt)("p",null,"\u8fd0\u884c\u6d4b\u8bd5\u540e\u6211\u4eec\u53d1\u73b0 ",(0,r.kt)("inlineCode",{parentName:"p"},"mergeConfig.ts")," \u6587\u4ef6\u7684\u5206\u652f\u8986\u76d6\u7387\u5e76\u672a\u8fbe\u5230 100%\uff0c\u63d0\u793a\u662f 23 \u884c\uff0c\u6253\u5f00\u6587\u4ef6\u540e\u53d1\u73b0\u6700\u540e\u4e00\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"else")," \u903b\u8f91\u5e76\u672a\u8d70\u5230\uff0c\u4e5f\u5c31\u662f ",(0,r.kt)("inlineCode",{parentName:"p"},"val1")," \u4e3a ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," \u7684\u60c5\u51b5\u3002\u4f46\u5b9e\u9645\u4e0a\u5373\u4f7f ",(0,r.kt)("inlineCode",{parentName:"p"},"val1")," \u4e3a ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined"),"\uff0c\u6211\u4eec\u4e5f\u662f\u8fd4\u56de ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined"),"\uff0c\u4e5f\u5c31\u662f\u8fd4\u56de ",(0,r.kt)("inlineCode",{parentName:"p"},"val1"),"\uff0c\u6240\u4ee5\u8fd9\u5757\u4ee3\u7801\u7684\u903b\u8f91\u53ef\u4ee5\u4f18\u5316\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function deepMergeStrat(val1: any, val2: any): any {\n  if (isPlainObject(val2)) {\n    return deepMerge(val1, val2)\n  } else if (typeof val2 !== 'undefined') {\n    return val2\n  } else if (isPlainObject(val1)) {\n    return deepMerge(val1)\n  } else {\n    return val1\n  }\n}\n")),(0,r.kt)("p",null,"2 \u4e2a\u5206\u652f\u53ef\u4ee5\u5408\u5e76\u5230\u4e00\u4e2a\u5206\u652f\uff0c\u8fd9\u6837\u6211\u4eec\u518d\u6b21\u8dd1\u6d4b\u8bd5\uff0c\u5206\u652f\u8986\u76d6\u7387\u5c31\u53ef\u4ee5\u8fbe\u5230 100% \u4e86\u3002"),(0,r.kt)("p",null,"\u81f3\u6b64\u6211\u4eec\u5b8c\u6210\u4e86 ",(0,r.kt)("inlineCode",{parentName:"p"},"ts-axios")," \u5e93\u5bf9 ",(0,r.kt)("inlineCode",{parentName:"p"},"mergeConfig")," \u6a21\u5757\u7684\u6d4b\u8bd5\uff0c\u4e0b\u4e00\u8282\u8bfe\u6211\u4eec\u6765\u6d4b\u8bd5\u53d6\u6d88\u6a21\u5757\u76f8\u5173\u4ee3\u7801\u3002"),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"\u8bf7\u6c42\u53d6\u6d88\u6a21\u5757\u5355\u5143\u6d4b\u8bd5"},"\u8bf7\u6c42\u53d6\u6d88\u6a21\u5757\u5355\u5143\u6d4b\u8bd5"),(0,r.kt)("p",null,"\u8bf7\u6c42\u53d6\u6d88\u6a21\u5757\u662f ",(0,r.kt)("inlineCode",{parentName:"p"},"ts-axios")," \u5e93\u6838\u5fc3\u6d41\u7a0b\u5176\u4e2d\u4e00\u4e2a\u5206\u652f\uff0c\u4e5f\u662f\u975e\u5e38\u91cd\u8981\u7684\u6a21\u5757\uff0c\u6211\u4eec\u5c06\u4ece\u57fa\u7840\u5e93\u548c\u4e1a\u52a1\u6d41\u7a0b\u6a21\u5757 2 \u4e2a\u65b9\u9762\u53bb\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u3002"),(0,r.kt)("h3",{id:"cancel-\u7c7b\u5355\u5143\u6d4b\u8bd5"},"Cancel \u7c7b\u5355\u5143\u6d4b\u8bd5"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"cancel/Cancel.spec.ts"),"\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import Cancel, { isCancel } from '../../src/cancel/Cancel'\n\ndescribe('cancel:Cancel', () => {\n  test('should returns correct result when message is specified', () => {\n    const cancel = new Cancel('Operation has been canceled.')\n    expect(cancel.message).toBe('Operation has been canceled.')\n  })\n\n  test('should returns true if value is a Cancel', () => {\n    expect(isCancel(new Cancel())).toBeTruthy()\n  })\n\n  test('should returns false if value is not a Cancel', () => {\n    expect(isCancel({ foo: 'bar' })).toBeFalsy()\n  })\n})\n")),(0,r.kt)("h3",{id:"canceltoken-\u7c7b\u5355\u5143\u6d4b\u8bd5"},"CancelToken \u7c7b\u5355\u5143\u6d4b\u8bd5"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"cancel/CancelToken.spec.ts"),"\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import CancelToken from '../../src/cancel/CancelToken'\nimport Cancel from '../../src/cancel/Cancel'\nimport { Canceler } from '../../src/types'\n\ndescribe('CancelToken', () => {\n  describe('reason', () => {\n    test('should returns a Cancel if cancellation has been requested', () => {\n      let cancel: Canceler\n      let token = new CancelToken(c => {\n        cancel = c\n      })\n      cancel!('Operation has been canceled.')\n      expect(token.reason).toEqual(expect.any(Cancel))\n      expect(token.reason!.message).toBe('Operation has been canceled.')\n    })\n\n    test('should has no side effect if call cancellation for multi times', () => {\n      let cancel: Canceler\n      let token = new CancelToken(c => {\n        cancel = c\n      })\n      cancel!('Operation has been canceled.')\n      cancel!('Operation has been canceled.')\n      expect(token.reason).toEqual(expect.any(Cancel))\n      expect(token.reason!.message).toBe('Operation has been canceled.')\n    })\n\n    test('should returns undefined if cancellation has not been requested', () => {\n      const token = new CancelToken(() => {\n        // do nothing\n      })\n      expect(token.reason).toBeUndefined()\n    })\n  })\n\n  describe('promise', () => {\n    test('should returns a Promise that resolves when cancellation is requested', done => {\n      let cancel: Canceler\n      const token = new CancelToken(c => {\n        cancel = c\n      })\n      token.promise.then(value => {\n        expect(value).toEqual(expect.any(Cancel))\n        expect(value.message).toBe('Operation has been canceled.')\n        done()\n      })\n      cancel!('Operation has been canceled.')\n    })\n  })\n\n  describe('throwIfRequested', () => {\n    test('should throws if cancellation has been requested', () => {\n      let cancel: Canceler\n      const token = new CancelToken(c => {\n        cancel = c\n      })\n      cancel!('Operation has been canceled.')\n      try {\n        token.throwIfRequested()\n        fail('Expected throwIfRequested to throw.')\n      } catch (thrown) {\n        if (!(thrown instanceof Cancel)) {\n          fail('Expected throwIfRequested to throw a Cancel, but test threw ' + thrown + '.')\n        }\n        expect(thrown.message).toBe('Operation has been canceled.')\n      }\n    })\n\n    test('should does not throw if cancellation has not been requested', () => {\n      const token = new CancelToken(() => {\n        // do nothing\n      })\n      token.throwIfRequested()\n    })\n  })\n\n  describe('source', () => {\n    test('should returns an object containing token and cancel function', () => {\n      const source = CancelToken.source()\n      expect(source.token).toEqual(expect.any(CancelToken))\n      expect(source.cancel).toEqual(expect.any(Function))\n      expect(source.token.reason).toBeUndefined()\n      source.cancel('Operation has been canceled.')\n      expect(source.token.reason).toEqual(expect.any(Cancel))\n      expect(source.token.reason!.message).toBe('Operation has been canceled.')\n    })\n  })\n})\n")),(0,r.kt)("p",null,"\u6ce8\u610f\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u4e86 ",(0,r.kt)("inlineCode",{parentName:"p"},"fail")," \u51fd\u6570\u8868\u793a\u4e00\u4e2a\u6d4b\u8bd5\u7684\u5931\u8d25\uff0c\u8fd9\u4e2a\u5e76\u672a\u5728 Jest \u6587\u6863\u4e2d\u4f53\u73b0\uff0c\u4f46\u5b83\u662f\u4e00\u4e2a\u53ef\u4ee5\u7528\u7684 API\u3002"),(0,r.kt)("h3",{id:"cancel-\u4e1a\u52a1\u903b\u8f91\u5355\u5143\u6d4b\u8bd5"},"Cancel \u4e1a\u52a1\u903b\u8f91\u5355\u5143\u6d4b\u8bd5"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"cancel.spec.ts"),"\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import axios from '../src/index'\nimport { getAjaxRequest } from './helper'\n\ndescribe('cancel', () => {\n  const CancelToken = axios.CancelToken\n  const Cancel = axios.Cancel\n\n  beforeEach(() => {\n    jasmine.Ajax.install()\n  })\n\n  afterEach(() => {\n    jasmine.Ajax.uninstall()\n  })\n\n  describe('when called before sending request', () => {\n    test('should rejects Promise with a Cancel object', () => {\n      const source = CancelToken.source()\n      source.cancel('Operation has been canceled.')\n\n      return axios\n        .get('/foo', {\n          cancelToken: source.token\n        })\n        .catch(reason => {\n          expect(reason).toEqual(expect.any(Cancel))\n          expect(reason.message).toBe('Operation has been canceled.')\n        })\n    })\n  })\n\n  describe('when called after request has been sent', () => {\n    test('should rejects Promise with a Cancel object', done => {\n      const source = CancelToken.source()\n      axios\n        .get('/foo/bar', {\n          cancelToken: source.token\n        })\n        .catch(reason => {\n          expect(reason).toEqual(expect.any(Cancel))\n          expect(reason.message).toBe('Operation has been canceled.')\n          done()\n        })\n\n      getAjaxRequest().then(request => {\n        source.cancel('Operation has been canceled.')\n        setTimeout(() => {\n          request.respondWith({\n            status: 200,\n            responseText: 'OK'\n          })\n        }, 100)\n      })\n    })\n\n    test('calls abort on request object', done => {\n      const source = CancelToken.source()\n      let request: any\n      axios\n        .get('/foo/bar', {\n          cancelToken: source.token\n        })\n        .catch(() => {\n          expect(request.statusText).toBe('abort')\n          done()\n        })\n\n      getAjaxRequest().then(req => {\n        source.cancel()\n        request = req\n      })\n    })\n  })\n\n  describe('when called after response has been received', () => {\n    test('should not cause unhandled rejection', done => {\n      const source = CancelToken.source()\n      axios\n        .get('/foo', {\n          cancelToken: source.token\n        })\n        .then(() => {\n          window.addEventListener('unhandledrejection', () => {\n            done.fail('Unhandled rejection.')\n          })\n          source.cancel()\n          setTimeout(done, 100)\n        })\n\n      getAjaxRequest().then(request => {\n        request.respondWith({\n          status: 200,\n          responseText: 'OK'\n        })\n      })\n    })\n  })\n})\n")),(0,r.kt)("p",null,"\u6ce8\u610f\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u4e86 ",(0,r.kt)("inlineCode",{parentName:"p"},"done.fail")," \u8868\u793a\u4e86\u4e00\u4e2a\u5f02\u5e38\u7684\u7ed3\u675f\uff0c\u8fd9\u4e2a\u5e76\u672a\u5728 Jest \u6587\u6863\u4e2d\u4f53\u73b0\uff0c\u4f46\u5b83\u662f\u4e00\u4e2a\u53ef\u4ee5\u7528\u7684 API\u3002"),(0,r.kt)("p",null,"\u81f3\u6b64\uff0c\u6211\u4eec\u5b8c\u6210\u4e86\u53d6\u6d88\u6a21\u5757\u76f8\u5173\u4e1a\u52a1\u903b\u8f91\u7684\u5355\u5143\u6d4b\u8bd5\uff0c\u6211\u4eec\u6d4b\u8bd5\u8986\u76d6\u7387\u8fbe\u5230\u4e86\u9608\u503c\uff0c\u6d4b\u8bd5\u5df2\u7ecf\u901a\u8fc7\u4e86\u3002\u4f46\u662f\u6254\u672a\u8fbe\u5230\u6211\u4eec\u7684\u76ee\u6807\uff0c\u8fd8\u6709\u5f88\u591a feature \u662f\u6ca1\u6709\u8986\u76d6\u5230\u7684\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u5b8c\u6210\u5269\u4f59 feature \u7684\u7f16\u5199\u5355\u5143\u6d4b\u8bd5\u3002"))}d.isMDXComponent=!0}}]);